package com.teampurado.view.student;

import com.teampurado.model.classes.*;
import com.teampurado.model.database.DBHelper;
import com.teampurado.model.thread.TimerThread;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author ProfessorSci
 */
public class ExamFrame extends javax.swing.JFrame {

    /**
     * Creates new form ExamFrame
     */
    public ExamFrame() {
        initComponents();
    }
    public ExamFrame(byte examID, Attempt at, Student stud) {
        initComponents();
        this.examID = examID;
        this.at = at;
        this.stud = stud;
        db = new DBHelper();
        String sql1 = "select * from exam "
                + "where examID = "+examID;
        
        
        db.setRs(db.executeQuery(sql1));
        try {
            if(db.getRs().next()){
                String[] split = db.getRs().getString("timeLimit").split(":");
                lbHour.setText(split[0]);
                lbMin.setText(split[1]);
                lbSec.setText(split[2]);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ExamFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        tt = new TimerThread(lbHour, lbMin, lbSec, this);
        
        
        
        this.at = at;
        db.add(at);
        list = new ArrayList();
        anslist = new ArrayList();
        qslist = new ArrayList();
        qsno = new ArrayList();
        String sql;
        sql = "select * from question_bank "
                + "where QBankID = '" + examID + "' "
                + "order by rand()";
        // sql = "select * from exam where examID ex = (select * from question_bank qb where ex.examID = qb.examID)";
        db.setRs(db.executeQuery(sql));
        try {
            int c = 0;
            while (db.getRs().next()) {
                c++;
                QuestionBank q = new QuestionBank(db.getRs().getByte("QBankID"), db.getRs().getShort("questionNo"),
                        db.getRs().getByte("numOfPoints"), db.getRs().getString("ask"), db.getRs().getString("answer"),
                        db.getRs().getString("choices"));
                list.add(q);
                anslist.add("");
                qslist.add(db.getRs().getString("ask"));
                qsno.add(""+c);
                if (c == 1){ 
                    questionChange(0);
                }
            }

           
            
            
            lbCurrent.setText(1 + "/" + list.size());
//            qsno.set(0, "1");
            tt.start();
        } catch (SQLException ex) {
            Logger.getLogger(ExamFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grbtnChoices = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        rbtnChoice1 = new javax.swing.JRadioButton();
        rbtnChoice2 = new javax.swing.JRadioButton();
        rbtnChoice3 = new javax.swing.JRadioButton();
        rbtnChoice4 = new javax.swing.JRadioButton();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnEnd = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        lbCurrent = new javax.swing.JLabel();
        lbHour = new javax.swing.JLabel();
        lbMin = new javax.swing.JLabel();
        lbSec = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taAsk = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setAutoscrolls(true);

        rbtnChoice1.setBackground(new java.awt.Color(51, 51, 51));
        grbtnChoices.add(rbtnChoice1);
        rbtnChoice1.setForeground(new java.awt.Color(153, 153, 153));
        rbtnChoice1.setText("Choice 1");

        rbtnChoice2.setBackground(new java.awt.Color(51, 51, 51));
        grbtnChoices.add(rbtnChoice2);
        rbtnChoice2.setForeground(new java.awt.Color(153, 153, 153));
        rbtnChoice2.setText("Choice 2");

        rbtnChoice3.setBackground(new java.awt.Color(51, 51, 51));
        grbtnChoices.add(rbtnChoice3);
        rbtnChoice3.setForeground(new java.awt.Color(153, 153, 153));
        rbtnChoice3.setText("Choice 3");
        rbtnChoice3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnChoice3ActionPerformed(evt);
            }
        });

        rbtnChoice4.setBackground(new java.awt.Color(51, 51, 51));
        grbtnChoices.add(rbtnChoice4);
        rbtnChoice4.setForeground(new java.awt.Color(153, 153, 153));
        rbtnChoice4.setText("Choice 4");

        btnPrev.setText("<");
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        btnNext.setText(">");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnEnd.setText("End");
        btnEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEndActionPerformed(evt);
            }
        });

        btnLast.setText(">>");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        btnFirst.setText("<<");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        lbCurrent.setForeground(new java.awt.Color(153, 153, 153));
        lbCurrent.setText("Current Question");

        lbHour.setForeground(new java.awt.Color(153, 153, 153));
        lbHour.setText("0");

        lbMin.setForeground(new java.awt.Color(153, 153, 153));
        lbMin.setText("0");

        lbSec.setForeground(new java.awt.Color(153, 153, 153));
        lbSec.setText("0");

        jLabel5.setForeground(new java.awt.Color(153, 153, 153));
        jLabel5.setText(":");

        jLabel6.setForeground(new java.awt.Color(153, 153, 153));
        jLabel6.setText(":");

        jScrollPane1.setBorder(null);

        taAsk.setEditable(false);
        taAsk.setBackground(new java.awt.Color(51, 51, 51));
        taAsk.setColumns(20);
        taAsk.setForeground(new java.awt.Color(153, 153, 153));
        taAsk.setRows(5);
        taAsk.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)), "Question", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(204, 204, 204))); // NOI18N
        jScrollPane1.setViewportView(taAsk);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbtnChoice1)
                                    .addComponent(rbtnChoice2)
                                    .addComponent(rbtnChoice3)
                                    .addComponent(rbtnChoice4)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 1, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(btnFirst)
                        .addGap(5, 5, 5)
                        .addComponent(btnPrev)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNext)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLast)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEnd))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(lbCurrent)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbHour)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel5)
                        .addGap(6, 6, 6)
                        .addComponent(lbMin)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel6)
                        .addGap(6, 6, 6)
                        .addComponent(lbSec)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbCurrent)
                    .addComponent(lbHour)
                    .addComponent(jLabel5)
                    .addComponent(lbMin)
                    .addComponent(jLabel6)
                    .addComponent(lbSec))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rbtnChoice1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbtnChoice2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbtnChoice3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnChoice4)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnFirst)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnNext)
                        .addComponent(btnPrev)
                        .addComponent(btnLast)
                        .addComponent(btnEnd)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        if(answer().equals(""))
            anslist.set(countq, "");
        QuestionBank q = list.get(countq);
        anslist.set(countq, answer());
//        qslist.set(countq, q.getAsk());
        if (countq > 0) {
            countq--;
        }
        
        String ans = anslist.get(countq);
        
        questionChange(countq);
        selectAnswer(ans);      
        lbCurrent.setText((countq + 1) + "/" + list.size());
//        qsno.set(countq, ""+(countq+1));
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        if(answer().equals(""))
            anslist.set(countq, "");
        QuestionBank q = list.get(countq);
        anslist.set(countq, answer());
//        qslist.set(countq, q.getAsk());
        System.out.println(""+qslist.get(countq));
        if(countq == list.size()-1)
            end(countq);
        
        if (countq < list.size() - 1) {
            countq++;
        }
        questionChange(countq);
        selectAnswer(anslist.get(countq));     
        lbCurrent.setText((countq + 1) + "/" + list.size());  
//        qsno.set(countq, ""+(countq+1));
        
//        String sql = "select * from question "
//                + "where ask = '" + qs.getAsk() + "' and answer = '" + ans + "'";           
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        if(answer().equals(""))
            anslist.set(countq, "");
        anslist.set(countq, answer());
        lbCurrent.setText(list.size() + "/" + list.size());
        
        countq = list.size()-1;
        questionChange(countq);
        selectAnswer(anslist.get(countq));
        anslist.set(countq, answer());
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        if(answer().equals(""))
            anslist.set(countq, "");
        
        anslist.set(countq, answer());
        
        countq = 0;
        questionChange(countq);
        selectAnswer(anslist.get(countq));
        lbCurrent.setText(1 + "/" + list.size());
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEndActionPerformed
        int c=0;
        if(answer().equals(""))
            anslist.set(countq, "");
        anslist.set(countq, answer());
        for(int i=0;i<anslist.size();i++){
            if(anslist.get(i).equals("")) c++;
                
        }
        if(c!=0){
            int d = JOptionPane.showConfirmDialog(this, "There are "+c+" unanswered question.\nAre you sure you want to end it?","Alert!", JOptionPane.YES_NO_OPTION);
            cbox(d);
        }
        
        
    }//GEN-LAST:event_btnEndActionPerformed

    private void rbtnChoice3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnChoice3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnChoice3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExamFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExamFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExamFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExamFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExamFrame().setVisible(true);
            }
        });
    }
        public void end(int count){
            int c=0;
            System.out.println("Ans: "+anslist.size());
            System.out.println("List: "+list.size());
        for(int i=0;i<anslist.size();i++){
            if(anslist.get(i).equals("")) c++;
                
        }
        if(c!=0)
            JOptionPane.showMessageDialog(this, "There are "+c+" unanswered question.");
        else{
        ReportFrame rf = new ReportFrame(qsno,qslist,anslist,at,stud);
        rf.setVisible(true);
//      tt.interrupt();
        this.dispose();
        }
    }
    
    public void selectAnswer(String ans){
      
        if(rbtnChoice1.getText().equals(ans))
            rbtnChoice1.setSelected(true);
        else if(rbtnChoice2.getText().equals(ans))
            rbtnChoice2.setSelected(true);
        else if(rbtnChoice3.getText().equals(ans))
            rbtnChoice3.setSelected(true);
        else if(rbtnChoice4.getText().equals(ans))
            rbtnChoice4.setSelected(true);
        else grbtnChoices.clearSelection();
    }
    
    public void questionChange(int count){
        
        QuestionBank qs = list.get(count);
        String[] split = qs.getChoices().split("\\|");
        taAsk.setText(qs.getAsk());
        rbtnChoice1.setText(split[0]);
        rbtnChoice2.setText(split[1]);
        rbtnChoice3.setText(split[2]);
        rbtnChoice4.setText(split[3]);
    }
    
    public String answer(){
        String ans = rbtnChoice1.isSelected() ? rbtnChoice1.getText():
        rbtnChoice2.isSelected() ? rbtnChoice2.getText():
        rbtnChoice3.isSelected() ? rbtnChoice3.getText():
        rbtnChoice4.isSelected() ? rbtnChoice4.getText():"";
        
        return ans;
        
    }
    
    public void cbox(int d){
        if(d == JOptionPane.YES_OPTION){
            ReportFrame rf = new ReportFrame(qsno,qslist,anslist,at,stud);
            rf.setVisible(true);
//            tt.interrupt();
            this.dispose();
        }
    }
    
    private TimerThread tt;
    private Student stud;
    private int countq = 0;
    private byte examID;
    private Attempt at;
    private DBHelper db;
    ArrayList<QuestionBank> list;
    ArrayList<String> anslist,qslist,qsno;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEnd;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.ButtonGroup grbtnChoices;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbCurrent;
    private javax.swing.JLabel lbHour;
    private javax.swing.JLabel lbMin;
    private javax.swing.JLabel lbSec;
    private javax.swing.JRadioButton rbtnChoice1;
    private javax.swing.JRadioButton rbtnChoice2;
    private javax.swing.JRadioButton rbtnChoice3;
    private javax.swing.JRadioButton rbtnChoice4;
    private javax.swing.JTextArea taAsk;
    // End of variables declaration//GEN-END:variables
}
